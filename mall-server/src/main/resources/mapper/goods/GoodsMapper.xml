<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.dao.goods.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.mall.entity.goods.Goods">
    <id column="goods_id" jdbcType="VARCHAR" property="goods_id" />
    <result column="goods_info_id" jdbcType="VARCHAR" property="goods_info_id" />
    <result column="goods_price_id" jdbcType="VARCHAR" property="goods_price_id" />
    <result column="goods_name" jdbcType="VARCHAR" property="goods_name" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="simple_describe" jdbcType="VARCHAR" property="simple_describe" />
    <result column="del_state" jdbcType="VARCHAR" property="del_state" />
    <result column="is_marketable" jdbcType="VARCHAR" property="is_marketable" />
    <result column="recommend" jdbcType="VARCHAR" property="recommend" />
    <result column="classic" jdbcType="VARCHAR" property="classic" />
    <result column="new_product" jdbcType="VARCHAR" property="new_product" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
    <result column="admin_id" jdbcType="VARCHAR" property="admin_id" />
    <!-- 排序 -->
    <result   column="salesSort" jdbcType="VARCHAR" property="salesSort"/>
  	<result   column="popularitySort" jdbcType="VARCHAR" property="popularitySort"/>
  	<result   column="priceSort" jdbcType="VARCHAR" property="priceSort"/>
    
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.mall.entity.goods.Goods">
    <result column="detail_describe" jdbcType="LONGVARCHAR" property="detail_describe" />
  </resultMap>
  <sql id="Base_Column_List">
    goods_id, goods_info_id, goods_price_id, goods_name, nickname, image, simple_describe, 
    del_state, is_marketable, recommend, classic, new_product, create_time, update_time, 
    admin_id
  </sql>
  <sql id="Blob_Column_List">
    detail_describe
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_goods
    where goods_id = #{goods_id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_goods
    where goods_id = #{goods_id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.mall.entity.goods.Goods">
    insert into t_goods (goods_id, goods_info_id, goods_price_id, 
      goods_name, nickname, image, 
      simple_describe, del_state, is_marketable, 
      recommend, classic, new_product, 
      create_time, update_time, admin_id, 
      detail_describe)
    values (#{goods_id,jdbcType=VARCHAR}, #{goods_info_id,jdbcType=VARCHAR}, #{goods_price_id,jdbcType=VARCHAR}, 
      #{goods_name,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, 
      #{simple_describe,jdbcType=VARCHAR}, #{del_state,jdbcType=VARCHAR}, #{is_marketable,jdbcType=VARCHAR}, 
      #{recommend,jdbcType=VARCHAR}, #{classic,jdbcType=VARCHAR}, #{new_product,jdbcType=VARCHAR}, 
      #{create_time,jdbcType=TIMESTAMP}, #{update_time,jdbcType=TIMESTAMP}, #{admin_id,jdbcType=VARCHAR}, 
      #{detail_describe,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mall.entity.goods.Goods">
    insert into t_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goods_id != null">
        goods_id,
      </if>
      <if test="goods_info_id != null">
        goods_info_id,
      </if>
      <if test="goods_price_id != null">
        goods_price_id,
      </if>
      <if test="goods_name != null">
        goods_name,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="simple_describe != null">
        simple_describe,
      </if>
      <if test="del_state != null">
        del_state,
      </if>
      <if test="is_marketable != null">
        is_marketable,
      </if>
      <if test="recommend != null">
        recommend,
      </if>
      <if test="classic != null">
        classic,
      </if>
      <if test="new_product != null">
        new_product,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="admin_id != null">
        admin_id,
      </if>
      <if test="detail_describe != null">
        detail_describe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goods_id != null">
        #{goods_id,jdbcType=VARCHAR},
      </if>
      <if test="goods_info_id != null">
        #{goods_info_id,jdbcType=VARCHAR},
      </if>
      <if test="goods_price_id != null">
        #{goods_price_id,jdbcType=VARCHAR},
      </if>
      <if test="goods_name != null">
        #{goods_name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="simple_describe != null">
        #{simple_describe,jdbcType=VARCHAR},
      </if>
      <if test="del_state != null">
        #{del_state,jdbcType=VARCHAR},
      </if>
      <if test="is_marketable != null">
        #{is_marketable,jdbcType=VARCHAR},
      </if>
      <if test="recommend != null">
        #{recommend,jdbcType=VARCHAR},
      </if>
      <if test="classic != null">
        #{classic,jdbcType=VARCHAR},
      </if>
      <if test="new_product != null">
        #{new_product,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="admin_id != null">
        #{admin_id,jdbcType=VARCHAR},
      </if>
      <if test="detail_describe != null">
        #{detail_describe,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mall.entity.goods.Goods">
    update t_goods
    <set>
      <if test="goods_info_id != null">
        goods_info_id = #{goods_info_id,jdbcType=VARCHAR},
      </if>
      <if test="goods_price_id != null">
        goods_price_id = #{goods_price_id,jdbcType=VARCHAR},
      </if>
      <if test="goods_name != null">
        goods_name = #{goods_name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="simple_describe != null">
        simple_describe = #{simple_describe,jdbcType=VARCHAR},
      </if>
      <if test="del_state != null">
        del_state = #{del_state,jdbcType=VARCHAR},
      </if>
      <if test="is_marketable != null">
        is_marketable = #{is_marketable,jdbcType=VARCHAR},
      </if>
      <if test="recommend != null">
        recommend = #{recommend,jdbcType=VARCHAR},
      </if>
      <if test="classic != null">
        classic = #{classic,jdbcType=VARCHAR},
      </if>
      <if test="new_product != null">
        new_product = #{new_product,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="admin_id != null">
        admin_id = #{admin_id,jdbcType=VARCHAR},
      </if>
      <if test="detail_describe != null">
        detail_describe = #{detail_describe,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where goods_id = #{goods_id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mall.entity.goods.Goods">
    update t_goods
    set goods_info_id = #{goods_info_id,jdbcType=VARCHAR},
      goods_price_id = #{goods_price_id,jdbcType=VARCHAR},
      goods_name = #{goods_name,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      simple_describe = #{simple_describe,jdbcType=VARCHAR},
      del_state = #{del_state,jdbcType=VARCHAR},
      is_marketable = #{is_marketable,jdbcType=VARCHAR},
      recommend = #{recommend,jdbcType=VARCHAR},
      classic = #{classic,jdbcType=VARCHAR},
      new_product = #{new_product,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      admin_id = #{admin_id,jdbcType=VARCHAR},
      detail_describe = #{detail_describe,jdbcType=LONGVARCHAR}
    where goods_id = #{goods_id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mall.entity.goods.Goods">
    update t_goods
    set goods_info_id = #{goods_info_id,jdbcType=VARCHAR},
      goods_price_id = #{goods_price_id,jdbcType=VARCHAR},
      goods_name = #{goods_name,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      simple_describe = #{simple_describe,jdbcType=VARCHAR},
      del_state = #{del_state,jdbcType=VARCHAR},
      is_marketable = #{is_marketable,jdbcType=VARCHAR},
      recommend = #{recommend,jdbcType=VARCHAR},
      classic = #{classic,jdbcType=VARCHAR},
      new_product = #{new_product,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      admin_id = #{admin_id,jdbcType=VARCHAR}
    where goods_id = #{goods_id,jdbcType=VARCHAR}
  </update>
  <!-- 商品操作 -->
  <resultMap extends="ResultMapWithBLOBs" type="com.mall.entity.goods.Goods" id="orderResultMap">
  	<association property="goodsInfo" javaType="com.mall.entity.goods.GoodsInfo">
  		<id column="goods_info_id_info" jdbcType="VARCHAR" property="goods_info_id" />
	    <result column="category_id" jdbcType="VARCHAR" property="category_id" />
	    <result column="inventoryid" jdbcType="VARCHAR" property="inventoryid" />
	    <result column="size" jdbcType="VARCHAR" property="size" />
	    <result column="flat_feet" jdbcType="VARCHAR" property="flat_feet" />
	    <result column="auth_id" jdbcType="VARCHAR" property="auth_id" />
	    <result column="framed" jdbcType="VARCHAR" property="framed" />
	    <result column="environment" jdbcType="VARCHAR" property="environment" />
	    <result column="standard" jdbcType="VARCHAR" property="standard" />
	    <result column="ext1" jdbcType="VARCHAR" property="ext1" />
	    <result column="ext2" jdbcType="VARCHAR" property="ext2" />
	    <result column="ext3" jdbcType="VARCHAR" property="ext3" />
	    <result column="create_time_info" jdbcType="TIMESTAMP" property="create_time" />
	    <result column="update_time_info" jdbcType="TIMESTAMP" property="update_time" />
	    <association property="inventory" javaType="com.mall.entity.inventory.Inventory">
	    	<id column="inventoryid_in" jdbcType="VARCHAR" property="inventoryid" />
		    <result column="StoreHouseNumber" jdbcType="VARCHAR" property="storeHouseNumber" />
		    <result column="ProductNumber" jdbcType="VARCHAR" property="productNumber" />
		    <result column="Amount" jdbcType="INTEGER" property="amount" />
		    <result column="InStockTime" jdbcType="TIMESTAMP" property="inStockTime" />
	    </association>
	     <association property="goodsCategory" javaType="com.mall.entity.goods.GoodsCategory">
	    	 <id column="category_id_cat" jdbcType="VARCHAR" property="category_id" />
		    <result column="parent_id" jdbcType="VARCHAR" property="parent_id" />
		    <result column="category_name" jdbcType="VARCHAR" property="category_name" />
		    <result column="priority" jdbcType="INTEGER" property="priority" />
		    <result column="status" jdbcType="VARCHAR" property="status" />
		    <result column="simple_describe" jdbcType="VARCHAR" property="simple_describe" />
		    <result column="recommend_cat" jdbcType="VARCHAR" property="recommend" />
		    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
		    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
		    <result column="admin_id_cat" jdbcType="VARCHAR" property="admin_id" />
	    </association>
  	</association>
  	<association property="goodsPrice" javaType="com.mall.entity.goods.GoodsPrice">
  		 <id column="price_id" jdbcType="VARCHAR" property="price_id" />
	    <result column="goods_id_pri" jdbcType="VARCHAR" property="goods_id" />
	    <result column="unit_name" jdbcType="VARCHAR" property="unit_name" />
	    <result column="retail_price" jdbcType="DECIMAL" property="retail_price" />
	    <result column="buy_price" jdbcType="DECIMAL" property="buy_price" />
	    <result column="sale_price" jdbcType="DECIMAL" property="sale_price" />
	    <result column="sale" jdbcType="VARCHAR" property="sale" />
	    <result column="status_pri" jdbcType="VARCHAR" property="status" />
	    <result column="create_time_pri" jdbcType="TIMESTAMP" property="create_time" />
	    <result column="update_time_pri" jdbcType="TIMESTAMP" property="update_time" />
	    <result column="admin_id_pri" jdbcType="VARCHAR" property="admin_id" />
  	</association>
  	<association property="filePath" javaType="com.mall.entity.cms.FilePath">
  		<id column="fileid" jdbcType="VARCHAR" property="fileid" />
	    <result column="belongid" jdbcType="VARCHAR" property="belongid" />
	    <result column="path" jdbcType="VARCHAR" property="path" />
	    <result column="fileidname" jdbcType="VARCHAR" property="fileidname" />
	    <result column="filename" jdbcType="VARCHAR" property="filename" />
	    <result column="filetype" jdbcType="VARCHAR" property="filetype" />
	    <result column="filesize" jdbcType="VARCHAR" property="filesize" />
	    <result column="status_f" jdbcType="VARCHAR" property="status" />
	    <result column="createby" jdbcType="VARCHAR" property="createby" />
	    <result column="createat" jdbcType="TIMESTAMP" property="createat" />
  	</association>
  	<association property="auth" javaType="com.mall.entity.cms.AuthorWithBLOBs">
  		<id column="id_auth" jdbcType="VARCHAR" property="id" />
  		<result column="authorname" jdbcType="VARCHAR" property="authorname" />
  		<result column="position" jdbcType="VARCHAR" property="position" />
  	</association>
  </resultMap>
  <!-- 后台商品列表 -->
  <select id="getPageFront" parameterType="com.mall.entity.goods.Goods" resultMap="orderResultMap">
		SELECT
	C.*,
	D.path,
	D.fileidname,
	D.filename,
	D.filetype,
	D.filesize,
	D.STATUS status_f 
FROM
	(
SELECT
	B.*,
	t_inventory.Amount 
FROM
	(
SELECT
	A.*,
	t_goods_price.retail_price ,
	t_goods_price.sale ,
	t_goods_price.buy_price,
	t_goods_price.sale_price
FROM
	(
	<!-- 排序 -->
	<if test="salesSort!=null or popularitySort!=null">
		SELECT * FROM (
	
	</if>
	<!-- 排序 -->
	SELECT D.*,t_cms_author.id id_auth,t_cms_author.authorname,t_cms_author.position
	 FROM (
	
SELECT
	t_goods.goods_id,
	t_goods.goods_price_id,
	t_goods.goods_name,
	t_goods.image,
	t_goods.nickname,
	t_goods.is_marketable,
	t_goods.recommend,
	t_goods.classic,
	t_goods.new_product,
	t_goods.create_time,
	t_goods_info.goods_info_id goods_info_id_info,
	t_goods_info.category_id,
	t_goods_info.inventoryid,
	t_goods_info.auth_id 
FROM
	t_goods
	LEFT JOIN t_goods_info t_goods_info ON t_goods.goods_info_id = t_goods_info.goods_info_id 
WHERE
	t_goods.del_state = 'N' 
			<!-- 分类 -->
			<if test="goodsInfo!=null and goodsInfo.category_id!=null">
				and t_goods_info.category_id=#{goodsInfo.category_id}
			</if>
			
			<if test="is_marketable!=null">
				and t_goods.is_marketable=#{is_marketable}
			</if>
			<if test="recommend!=null">
				and t_goods.recommend=#{recommend}
			</if>
			<if test="classic!=null">
				and t_goods.classic=#{classic}
			</if>
			<if test="new_product!=null">
				and t_goods.new_product=#{new_product}
			</if>
			<if test="goods_name!=null">
				AND t_goods.goods_name LIKE CONCAT('%',#{goods_name},'%')
			</if>
			<if test="goodsInfo!=null and goodsInfo.environment!=null">
				AND t_goods_info=#{goodsInfo.environment}
			</if>
			<if test="goodsInfo!=null and goodsInfo.standard!=null">
				AND t_goods_info=#{goodsInfo.standard}
			</if>
		)D left join t_cms_author on D.auth_id=t_cms_author.id
			<where>
			<if test="auth!=null and auth.position!=null">
				t_cms_author.position=#{auth.position}
			
			</if>
			</where>
			<!-- 排序 -->
			<!-- 人气 -->
			<if test="popularitySort!=null">
			) G LEFT JOIN 
			(SELECT  count(*) as countnum ,good_id FROM t_history_goods H  group by good_id ) H ON H.good_id=G.goods_id
			
			</if>
			<!-- 销量 -->
			<if test="salesSort!=null">
				) G LEFT JOIN 
			(SELECT  count(*) as countnum ,goods_id FROM t_order_details H  group by goods_id ) H ON H.good_id=G.goods_id
			
			</if>
			<!-- 排序 -->
	) A
	LEFT JOIN t_goods_price ON A.goods_price_id = t_goods_price.price_id 
	<where>
			  
			 <if test="goodsPrice!=null and goodsPrice.sale!=null">
			 	t_goods_price.sale=#{goodsPrice.sale}
			 </if>
			 
			</where>
	) B
	LEFT JOIN t_inventory ON B.inventoryid = t_inventory.inventoryid 
	) C
	LEFT JOIN t_file_path D ON C.image = D.fileid 
ORDER BY
	<!-- 排序 -->
	<if test="popularitySort!=null">
		C.countnum ${popularitySort},
	</if>
	<!-- 销量 -->
	<if test="salesSort!=null">
		C.countnum ${salesSort},
	</if>
	<!-- 价格 -->
	<if test="priceSort!=null">
		C.retail_price ${priceSort},
	</if>
	
	<!-- 排序 -->
	C.create_time DESC
  </select>
  <!-- 删除 -->
  <update id="batchDelete" parameterType="java.util.List">
  	update t_goods set
  		del_state='Y'
  	where goods_id in
  	<foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.goods_id}
     </foreach>
  
  </update>
  <!-- 上架 -->
  <update id="batchMarketableUp" parameterType="java.util.List">
  update t_goods set 
  		is_marketable='Y'
  	where goods_id in
  	<foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.goods_id}
     </foreach>
  
  </update>
  <!-- 下架 -->
  <update id="batchMarketableDown" parameterType="java.util.List">
  update t_goods set
  		is_marketable='N'
  	where goods_id in
  	<foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.goods_id}
     </foreach>
  
  </update>
  <!-- 查询详细信息 -->
  <select id="selectInfo" parameterType="com.mall.entity.goods.Goods" resultMap="orderResultMap">
  	SELECT G.*,
	H.path, H.fileidname, H.filename, H.filetype, H.filesize, H.status status_f

	FROM(
	SELECT E.*,F.Amount
		FROM
			(
				SELECT 
			C.*,
			D.category_id category_id_cat, D.parent_id, D.category_name, D.priority, D.recommend recommend_cat
			FROM (
			SELECT A.*,
				B.unit_name, B.retail_price, B.buy_price, B.sale_price, B.sale, B.status
			FROM (
			SELECT 
				t1.goods_id,  t1.goods_price_id, t1.goods_name, t1.nickname, t1.image, t1.simple_describe, 
				t1.is_marketable, t1.recommend, t1.classic, t1.new_product, t1.create_time, t1.update_time, 
				t1.admin_id,t1.detail_describe,
				t2.goods_info_id, t2.category_id, t2.inventoryid, t2.size, t2.flat_feet, t2.auth_id, t2.framed, t2.environment, 
				t2.standard
			FROM 
			t_goods t1, t_goods_info t2 
			WHERE 
			t1.goods_id = #{goods_id} AND t1.goods_info_id = t2.goods_info_id 
			) A
			LEFT JOIN t_goods_price B ON A.goods_price_id = B.price_id
			
			) C LEFT JOIN t_goods_category D ON C.category_id=D.category_id
			
			) E LEFT JOIN t_inventory F ON E.inventoryid=F.inventoryid
			
			) G LEFT JOIN t_file_path H ON G.image=H.fileid
	
  </select>
</mapper>